---
import {AstroFont}  from "astro-font";
import Footer from "../components/Footer.astro";
import Metadata from "../components/Metadata.astro";
import Nav from "../components/Nav.astro";

interface Props {
	title: string;
}
const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="bg-bgColor">
<head>
	<meta charset="UTF-8" />
	<meta
		name="description"
		content="A minimal personal portfolio website made with Astro, React and Tailwind CSS"
	/>
	<meta name="viewport" content="width=device-width" />

	<Metadata
		slot="head"
		title="Lukas Martincek"
		description="A minimal personal portfolio website made with Astro, React and Tailwind CSS"
		image={`${import.meta.env.SITE}/og.png`}
		canonicalUrl={import.meta.env.SITE}
		type="website"
	/>
	<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
	<meta name="generator" content={Astro.generator} />
	<title>{title}</title>
	<AstroFont
		config={[
			{
				name: "Satoshi",
				src: [
					{
						style: "normal",
						weight: "400 500 600 700 800 900",
						path: "./public/fonts/Satoshi-Variable.woff2",
					},
				],
				preload: true,
				display: "swap",
				selector: "body",
				fallback: "sans-serif",
			},
			{
				name: "Instrument-Serif",
				src: [
					{
						style: "normal",
						weight: "400",
						path: "./public/fonts/InstrumentSerif-Regular.ttf",
					},
				],
				preload: true,
				display: "swap",
				selector: "body",
				fallback: "serif",
			},
		]}
	/>
	<script type="module" src="/src/utils/googleMap.ts" />
</head>
<body
	class="mx-auto my-8 max-w-[400px] px-4 font-sans text-body selection:bg-primary selection:text-hoverColor md:my-16 md:max-w-[600px]">
	<Nav />
	<slot />
	<Footer />

	<script is:inline>
		(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
			key: "AIzaSyDv7H3HJY_aYkHfknArxacKLFHoiuLqAzk",
			v: "weekly",
			// Use the 'v' parameter to indicate the version to use (weekly, beta, alpha, etc.).
			// Add other bootstrap parameters as needed, using camel case.
		});
	</script>
	</body>
</html>