---
import { AUTHOR } from "../constants/general";
interface Props {
	title: string;
	description: string;
	image: string;
	canonicalUrl: string;
	type: "website" | "article";
	publishedTime?: string;
	modifiedDate?: string;
}

const {
	title,
	description,
	image,
	canonicalUrl,
	type,
	publishedTime,
	modifiedDate,
} = Astro.props;

const siteUrl = Astro.url.origin;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />

<meta name="language" content="en" />
<meta name="author" content={AUTHOR} />
<meta name="title" content={title} />
<meta name="robots" content="index, follow" />
<meta name="description" content={description} />
{
	publishedTime && (
		<meta property="article:published_time" content={publishedTime} />
	)
}

<link rel="canonical" href={canonicalUrl} />

<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalUrl} />
<meta property="og:image" content={image} />
<meta property="og:type" content={type} />
<meta property="og:site_name" content={canonicalUrl} />
<meta property="og:locale" content="en_US" />

<script
	type="application/ld+json"
	set:html={JSON.stringify(
		type === "article" && publishedTime
			? {
					"@context": "https://schema.org",
					"@type": "Article",
					headline: title,
					description: description,
					datePublished: publishedTime,
					dateModified: modifiedDate || publishedTime,
					author: {
						"@type": "Organization",
						name: title,
					},
					publisher: {
						"@type": "Organization",
						name: title,
						logo: {
							"@type": "ImageObject",
							url: `${siteUrl}/logo.png`,
						},
					},
					inLanguage: "en_US",
				}
			: {
					"@context": "https://schema.org",
					"@type": "WebSite",
					url: siteUrl,
					name: title,
					description: description,
					inLanguage: "en_US",
				},
	)}
/>

<meta name="generator" content={Astro.generator} />
